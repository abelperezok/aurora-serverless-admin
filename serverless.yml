# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aurora-serverless-admin # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: dotnetcore2.1
  stage: dev
  region: eu-west-1
  profile: abel-ao
  timeout: 60

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: bin/release/netcoreapp2.1/deploy-package.zip
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  RunQuery:
    handler: CsharpHandlers::project.lambda.Function::RunQueryHandler
    vpc:
      securityGroupIds:
        - !Ref DbClusterSg
      subnetIds:
        - subnet-0c8c0eae5dc9574f6
        - subnet-07541aa84cc88248c

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Parameters: 
    DbClusterDatabaseName: 
      Type: String
      Default: generator
    DbClusterIdentifier: 
      Type: String
      Default: serverless-mysql-aurora
    DbClusterParameterGroup: 
      Type: String
      Default: default.aurora5.6
    DbClusterMasterUsername: 
      Type: String
      Default: master
    DbClusterMasterPassword: 
      Type: String
      Default: Aurora.2018
    DbClusterPort: 
      Type: Number
      Default: 3306
    VpcId: 
      Type: String
      Default: vpc-1afba47c

  Resources:
    DbClusterSg:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow MySQL port to client host
        VpcId:
          Ref: VpcId
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: !Ref DbClusterPort
            ToPort: !Ref DbClusterPort
            CidrIp: 0.0.0.0/0

    DbSubnetGroup: 
      Type: "AWS::RDS::DBSubnetGroup"
      Properties: 
        DBSubnetGroupDescription: "private subnets"
        SubnetIds: 
          - subnet-0c8c0eae5dc9574f6
          - subnet-07541aa84cc88248c

    AuroraMysqlCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        DatabaseName:
          Ref: DbClusterDatabaseName
        DBClusterParameterGroupName:
          Ref: DbClusterParameterGroup
        DBSubnetGroupName:
          Ref: DbSubnetGroup
        Engine: aurora
        EngineMode: serverless
        MasterUsername:
          Ref: DbClusterMasterUsername
        MasterUserPassword:
          Ref: DbClusterMasterPassword
        ScalingConfiguration:
          AutoPause: true
          MinCapacity: 2
          MaxCapacity: 4
          SecondsUntilAutoPause: 1800
        VpcSecurityGroupIds:
          - !Ref DbClusterSg

  # Outputs:
  #   DbClusterEndpointAddress:
  #     Value: !GetAtt AuroraMysqlCluster.Endpoint.Address
  #   DbClusterEndpointPort:
  #     Value: !GetAtt AuroraMysqlCluster.Endpoint.Port


